@import '../define/all';

.popover-target {
  > *:focus {
    outline-width: 0;
  }

  .popover-wrapper {
    position: absolute;
    z-index: 5;
  }

  &:not(.popover-open) .popover-wrapper {
    opacity: 0;
    pointer-events: none;
  }
}

// $arrow-offset: amount to shift arrow along edge of popover
// $arrow-target-offset: amount to shift arrow relative to target (perpendicular to popover edge)
@mixin popover-sizing($arrow-square-size, $arrow-offset, $arrow-target-offset) {
  $arrow-diagonal-half-size: $arrow-square-size / 1.41421356;
  $content-margin: floor($arrow-diagonal-half-size + $arrow-target-offset);
  $arrow-position: -$arrow-square-size * 0.5 + $arrow-offset;
  $computed-offset: ($arrow-diagonal-half-size - $arrow-square-size) * 0.5 + $arrow-offset;

  .popover-arrow {
    position: absolute;
    width: $arrow-square-size;
    height: $arrow-square-size;

    &:before {
      margin: ceil(($arrow-square-size - $arrow-diagonal-half-size) * 0.5);
      width: floor($arrow-diagonal-half-size - 1);
      height: floor($arrow-diagonal-half-size - 1);
    }
  }
}

@mixin popover-appearance(
  $background-color,
  $text-color,
  $shadows
) {
  box-shadow: $shadows;

  .popover-content {
    background: $background-color;
    color: $text-color;
  }

  .popover-arrow::before {
    box-shadow: 1px 1px 6px rgba($black3, 0.2);
  }

  .popover-arrow-border {
    fill: $black3;
    fill-opacity: 0.2;
  }

  .popover-arrow-fill {
    fill: $background-color;
  }
}

@mixin fade-transition() {
  @include react-transition('popover', (opacity: 0 1), $before: '&');
}

@mixin scale-transition() {
  @include react-transition(
    'popover',
    (transform: scale(0.3) scale(1)),
    $duration: 300ms,
    $after: '> &'
  );
}

.popover {
  @include popover-sizing(
    $arrow-square-size: 30px,
    $arrow-offset: 4px,
    $arrow-target-offset: -4px
  );

  @include popover-appearance($white1,
    inherit,
    $shadow-m
  );

  @include scale-transition();
  display: inline-block;
  z-index: 20;
  border-radius: $border-radius;

  .popover-content {
    position: relative;
    border-radius: $border-radius;
  }

  &.popover-content-sizing {
    .popover-content {
      max-width: 200px;
      padding: $padding;
    }

    .popover-target & {
      width: 200px;
    }
  }
}

.popover-backdrop {
  background: rgba($white, 0);
}

.transition-container {
  @include fade-transition();
  z-index: 20;

  &:focus {
    outline: none;
  }

  &.popover-exit .popover-content {
    pointer-events: none;
  }
}

.popover-target {
  display: inline-block;
  position: relative;
  vertical-align: top;

  > .popover-target {
    display: inline-block;
  }

  // .transition-container {
  //   @include popover-inline-position();
  // }
}
